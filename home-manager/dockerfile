FROM lscr.io/linuxserver/code-server:4.99.3

# Install prerequisites
RUN apt-get update && \
    apt-get install -y curl xz-utils sudo && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /config/workspace /nix /config/.local/state/nix && \
    chown -R abc:abc /config /nix && \
    chmod 755 /nix

# Copy Nix package configuration
COPY common-packages.nix /tmp/common-packages.nix
RUN chown abc:abc /tmp/common-packages.nix && \
    chown -R abc:abc /config && \
    echo "abc ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/abc && \
    chmod 0440 /etc/sudoers.d/abc

# Switch to abc user for Nix installation
USER abc
WORKDIR /config

# Install Nix as single-user installation for abc
ENV USER=abc
ENV HOME=/config
RUN curl -L https://nixos.org/nix/install | sh -s -- --no-daemon

# Create default.nix file
RUN echo '{ pkgs ? import <nixpkgs> {} }: \
    let \
      packages = import ./common-packages.nix { inherit pkgs; }; \
    in \
    pkgs.buildEnv { \
      name = "dev-environment"; \
      paths = packages; \
    }' > /tmp/default.nix && \
    chmod 644 /tmp/default.nix

# Set up Nix environment and install packages
RUN . $HOME/.nix-profile/etc/profile.d/nix.sh && \
    mkdir -p /config/.local/bin && \
    cd /tmp && \
    nix-build && \
    ln -sf /tmp/result/bin/* /config/.local/bin/ || true && \
    rm -rf /tmp/common-packages.nix /tmp/default.nix /tmp/result
RUN . $HOME/.nix-profile/etc/profile.d/nix.sh && \
    nix-store --gc
# Configure Git
RUN . $HOME/.nix-profile/etc/profile.d/nix.sh && \
    git config --global user.name "Christopher Seaman" && \
    git config --global user.email "86775+christopherseaman@users.noreply.github.com" && \
    git config --global core.editor "nvim" && \
    git config --global init.defaultBranch main && \
    git config --global pull.rebase false && \
    # Configure delta for better git diffs
    git config --global core.pager "delta" && \
    git config --global delta.navigate true && \
    git config --global delta.line-numbers true && \
    git config --global delta.side-by-side true

# Setup shell configuration
RUN mkdir -p /config/.config/fish && \
    echo '. $HOME/.nix-profile/etc/profile.d/nix.sh' > /config/.config/fish/config.fish && \
    echo 'set -x PATH $PATH /config/.local/bin' >> /config/.config/fish/config.fish && \
    echo 'eval "$(starship init fish)"' >> /config/.config/fish/config.fish && \
    echo '. $HOME/.nix-profile/etc/profile.d/nix.sh' >> /config/.bashrc && \
    echo 'export PATH=$PATH:/config/.local/bin' >> /config/.bashrc && \
    echo 'eval "$(starship init bash)"' >> /config/.bashrc

# Make sure the path is properly set for code-server
RUN mkdir -p /config/.config/code-server && \
    echo '#!/usr/bin/env bash\n\
. $HOME/.nix-profile/etc/profile.d/nix.sh\n\
export PATH=$PATH:/config/.local/bin\n\
exec /usr/bin/entrypoint.sh "$@"' > /config/entrypoint-wrapper.sh && \
    chmod +x /config/entrypoint-wrapper.sh

# Switch back to root for final steps
USER root

# Configure the container to use our wrapper script
RUN mkdir -p /etc/cont-init.d && \
cat > /etc/cont-init.d/99-code-server-wrapper <<'EOF'
#!/bin/bash
# This script is run when the container starts
if [[ -f /config/entrypoint-wrapper.sh ]]; then
  cp /config/entrypoint-wrapper.sh /usr/local/bin/code-server-wrapper
  chmod +x /usr/local/bin/code-server-wrapper
  sed -i "s|command=/usr/bin/entrypoint.sh|command=/usr/local/bin/code-server-wrapper|" /etc/services.d/code-server/run
fi
exit 0
EOF
RUN chmod +x /etc/cont-init.d/99-code-server-wrapper
